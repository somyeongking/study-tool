/* style.css 파일에 저장 (기존 코드에 추가/수정) */

/* --- 전체 페이지 기본 스타일 --- */
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 20px;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    min-height: 100vh;
    box-sizing: border-box;
}

/* --- 메인 컨테이너 (스톱워치, 스터디 플래너, 타이머 영역을 감쌈) --- */
.main-container {
    display: flex; /* 자식 요소들을 가로로 나란히 배치 */
    gap: 20px; /* 자식 요소들 사이 간격 */
    width: 100%;
    max-width: 1200px; /* 세 개의 영역이 나란히 들어갈 수 있도록 최대 가로 폭을 넓힙니다 */
    flex-wrap: wrap; /* 화면이 좁아지면 줄바꿈되도록 설정 (반응형) */
    align-items: flex-start; /* 자식 요소들을 위쪽 정렬 */
}

/* --- 각 컨테이너 (스터디 플래너, 타이머, 스톱워치) 공통 스타일 --- */
.tool-item {
    background-color: #fff; /* 하얀색 배경 */
    padding: 20px; /* 패딩을 조금 줄입니다 */
    border-radius: 8px; /* 모서리 둥글게 */
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* 그림자 효과 */
    box-sizing: border-box;
    display: flex; /* 내부 요소를 정렬하기 위해 flexbox 사용 */
    flex-direction: column; /* 내부 요소를 세로로 배치 */
    align-items: center; /* 내부 요소를 가로 가운데 정렬 */
    text-align: center; /* 텍스트 가운데 정렬 (display 등) */
}

/* --- 스터디 플래너 컨테이너 스타일 (tool-item 스타일 상속 후 추가/수정) --- */
.study-planner-container {
    flex-grow: 1; /* 남은 공간을 최대한 차지하도록 설정 */
    flex-basis: 500px; /* 최소 기본 너비 설정 (이것보다 작아지면 flex-grow 멈춤) */
    /* max-width: 600px; */ /* 최대 너비를 제한할 수도 있습니다 */
    padding: 30px; /* 스터디 플래너는 패딩을 좀 더 넓게 유지 */
    align-items: stretch; /* 내부 요소(add-item-area, items-list-area)가 가로 꽉 차게 늘어나도록 변경 */
}

/* --- 타이머/스톱워치 컨테이너 스타일 (tool-item 스타일 상속 후 추가/수정) --- */
.timer-container, .stopwatch-container {
    flex-grow: 0; /* 남은 공간을 차지하지 않도록 설정 */
    flex-basis: 200px; /* 기본 너비 설정 */
    min-width: 180px; /* 최소 너비 설정 */
}


/* --- 항목 추가 영역 스타일 (기존 스타일 유지, study-planner-container 안에서 사용) --- */
.study-planner-container .add-item-area {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
    flex-wrap: wrap;
    /* align-items: center; */ /* tool-item에 align-items: center가 있으므로 주석 처리하거나 필요에 따라 재정의 */
}

/* 입력 칸과 선택 메뉴 스타일 (기존 스타일 유지, study-planner-container 안에서 사용) */
.study-planner-container .add-item-area input[type="text"],
.study-planner-container .add-item-area select {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    flex-grow: 1;
    font-size: 1rem;
    box-sizing: border-box;
    min-width: 100px;
}

/* 추가 버튼 스타일 (기존 스타일 유지, study-planner-container 안에서 사용) */
.study-planner-container .add-item-area button {
    padding: 10px 20px;
    background-color: #5cb85c;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.3s ease;
    flex-shrink: 0;
}

.study-planner-container .add-item-area button:hover {
    background-color: #4cae4c;
}


/* --- 목록 영역 스타일 (기존 스타일 유지, study-planner-container 안에서 사용) --- */
.study-planner-container .items-list-area {
    margin-top: 20px;
}

/* 기간별 목록 영역 스타일 (기존 스타일 유지) */
.category-list {
    margin-bottom: 20px;
}

.category-list h3 {
    border-bottom: 2px solid #eee;
    padding-bottom: 5px;
    margin-bottom: 10px;
    color: #333;
}

/* 목록 (ul) 기본 스타일 제거 (기존 스타일 유지) */
.category-list ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

/* 목록 항목 (li) 스타일 (기존 스타일 유지) */
.category-list li {
    background-color: #eee;
    padding: 10px;
    margin-bottom: 8px;
    border-radius: 4px;
    display: flex;
    align-items: center;
    gap: 10px;
    word-break: break-word;
}

/* 체크박스 스타일 (기존 스타일 유지) */
.item-checkbox {
    width: 20px;
    height: 20px;
    cursor: pointer;
    flex-shrink: 0;
}

/* 항목 이름 텍스트 (span) 스타일 (기존 스타일 유지) */
.category-list li span {
    flex-grow: 1;
    font-size: 1.1rem;
    color: #555;
}

/* 체크된 항목의 텍스트에 줄 긋기 (기존 스타일 유지) */
.category-list li input[type="checkbox"]:checked + span {
    text-decoration: line-through;
    color: #999;
}

/* 삭제 버튼 스타일 (기존 스타일 유지) */
.delete-button {
    padding: 5px 10px;
    background-color: #d9534f;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color 0.3s ease;
    flex-shrink: 0;
}

.delete-button:hover {
    background-color: #c9302c;
}


/* --- 타이머/스톱워치 개별 영역 스타일 (수정됨: tool-item 클래스가 공통 스타일을 제공) --- */
/* .timer, .stopwatch { */
    /* border: 1px solid #eee; */ /* tool-item에 border가 없으므로 필요하면 추가 */
    /* padding: 15px; */ /* tool-item에 padding: 20px이 적용됨 */
    /* border-radius: 4px; */ /* tool-item에 border-radius: 8px이 적용됨 */
    /* text-align: center; */ /* tool-item에 text-align: center가 적용됨 */
/* } */

/* 타이머/스톱워치 제목 스타일 (기존 스타일 유지) */
.timer-container h3, .stopwatch-container h3 {
    margin-top: 0;
    color: #555;
    border-bottom: none;
}

/* 시간 표시 영역 스타일 (기존 스타일 유지) */
.timer-container .display, .stopwatch-container .display {
    font-size: 2.5rem;
    margin: 15px 0;
    color: #333;
    font-family: 'Courier New', Courier, monospace;
}

/* 타이머/스톱워치 버튼들을 감싸는 div (버튼 정렬을 위해 추가 가능) */
/* .timer div:last-of-type, .stopwatch div:last-of-type { */
    /* margin-top: 10px; */
/* } */
/* 참고: 현재 HTML 구조에서는 버튼들이 display: flex, flex-direction: column 상태인 .tool-item 안에 바로 있어서 세로로 배치됩니다. */
/* 만약 버튼들을 가로로 나란히 배치하고 싶다면, 버튼들을 묶는 div를 추가하고 그 div에 display: flex를 적용해야 합니다. */


/* 타이머/스톱워치 버튼들 스타일 */
/* .tools-container button 에서 .tool-item button 으로 변경 */
.tool-item button {
    padding: 10px 15px;
    margin: 5px; /* 위아래 좌우 간격 동일하게 */
    font-size: 1rem;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    width: calc(100% - 10px); /* 컨테이너 너비에서 좌우 마진을 뺀 만큼 너비 설정 */
    max-width: 200px; /* 버튼 최대 너비 제한 */
}

/* 버튼 색상 (예시) */
/* 시작/일시정지/계속 버튼 */
.tool-item button#start-pause-timer,
.tool-item button#start-stop-stopwatch {
     background-color: #5cb85c; /* 녹색 */
     color: white;
}
.tool-item button#start-pause-timer:hover,
.tool-item button#start-stop-stopwatch:hover {
    background-color: #4cae4c; /* 호버 시 진하게 */
}

/* 초기화 버튼 */
.tool-item button#reset-timer,
.tool-item button#reset-stopwatch {
    background-color: #f0ad4e; /* 주황색 */
    color: white;
}
.tool-item button#reset-timer:hover,
.tool-item button#reset-stopwatch:hover {
    background-color: #ec971f; /* 호버 시 진하게 */
}


/* --- 반응형 디자인을 위한 미디어 쿼리 --- */
/* 화면 너비가 992px 이하일 때 (세 개의 요소가 나란히 배치되기 어려운 시점) */
@media (max-width: 992px) {
    .main-container {
        flex-direction: column; /* 세로로 쌓음 */
        gap: 30px; /* 세로 간격 조정 */
        align-items: center; /* 세로로 쌓일 때 가운데 정렬 */
    }

    .tool-item {
        flex: none; /* flex 비율 설정을 해제 */
        width: 100%; /* 가로 전체 너비 사용 */
        max-width: 600px; /* 가운데 정렬될 때 최대 너비 제한 */
        min-width: auto; /* 최소 너비 설정 해제 */
        padding: 20px; /* 패딩 통일 */
    }

    /* 스터디 플래너 컨테이너는 내부 요소를 다시 가로로 늘려줌 */
    .study-planner-container {
        align-items: stretch;
         padding: 20px; /* 패딩 통일 */
    }


    /* 작은 화면에서 입력 영역 버튼들이 줄바꿈될 때 정렬 */
    .study-planner-container .add-item-area {
         flex-direction: column;
         gap: 15px;
    }
    .study-planner-container .add-item-area input[type="text"],
    .study-planner-container .add-item-area select,
    .study-planner-container .add-item-area button {
         width: 100%; /* 입력 요소들을 가로 꽉 차게 */
         max-width: none; /* 최대 너비 제한 해제 */
         box-sizing: border-box;
    }

    /* 작은 화면에서 타이머/스톱워치 버튼 가로 정렬 */
    .timer-container button,
    .stopwatch-container button {
        width: auto; /* 너비 설정 해제 */
        flex-grow: 1; /* 사용 가능한 공간을 나눠 가짐 */
        max-width: none;
    }
     .timer-container, .stopwatch-container {
         /* 작은 화면에서 버튼을 가로로 나란히 배치하기 위해 컨테이너 내부를 flex-direction: row로 변경 */
         flex-direction: row;
         flex-wrap: wrap; /* 버튼들이 많아지면 줄바꿈되도록 설정 */
         justify-content: center; /* 버튼들 가운데 정렬 */
         gap: 10px; /* 버튼들 사이 간격 */
     }
    .timer-container h3, .stopwatch-container h3,
    .timer-container .display, .stopwatch-container .display {
        width: 100%; /* 제목과 시간 표시는 가로 전체 너비 사용 */
    }
}

/* (더 작은 화면을 위한 추가 미디어 쿼리 작성 가능) */
/* 예: 모바일 화면에서는 패딩이나 글자 크기 더 줄이기 */
/* @media (max-width: 480px) { ... } */
